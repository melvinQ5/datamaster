"""
Django settings for crm project.

Generated by 'django-admin startproject' using Django 4.0.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

from pathlib import Path
from pickle import TRUE
import os


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# 返回项目根路径，即manage.py所在的目录


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-f=l$)9@qa3^1tnse5xh5emyxrwahwc__57sn1u1@#5i8fn$=*7'
#每一个django项目成功创建后会有一个唯一标识，作为安全特征

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True #为True表示项目在本地开发阶段，若要上线，则调为False


ALLOWED_HOSTS = []
#允许访问的地址或域名，上线后此处填写后用户才能访问


# Application definition

INSTALLED_APPS = [
    'reports',
    'system',
    'static',
    'django.contrib.admin',
    'django.contrib.auth', #与用户权限相关
    'django.contrib.contenttypes',#与用户权限相关
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]
#已安装的服务，包括django一些基础功能，可自行添加


MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',#与用户权限相关
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',#与用户权限相关
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
#中间件，主要是安全方面处理，比如session、csrf（Cross Site Request Forgery, 跨站域请求伪造）的处理

ROOT_URLCONF = 'crm.urls' #配置项目的主url


TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')], #拼接路径
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# 网站有很多网页，每一级网页都会有自己的基础templates，然后可以在上面创建自己想要的功能。
# 其中 DIRS 是directories,是一个列表，比如在里面放入[template1,template2]

# 设置缓存
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache', # 上线阶段使用 此设置
        #'BACKEND': 'django.core.cache.backends.dummy.DummyCache', #开发阶段使用 此设置,可实现配置好缓存的接口而不做任何实际的事情，可以在不修改缓存代码的情况下正常开发测试。
        'LOCATION': 'D:/foo/bar', # 缓存文件存放文件夹，需要有读写权限
    }
}


WSGI_APPLICATION = 'crm.wsgi.application'
# 告诉django项目上线后，服务器需要去寻找的主要的配置文件在 crm\wsgi\application
# 会将整个项目打包在这个application下面，在服务器上提供web服务


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'meidata', #数据库名称
        'USER':'root',
        'PASSWORD':'sql123',
        'HOST':'127.0.0.1',
        'PORT':'3306',
        'ATOMIC_REQUESTS':True  #全局生效自动提交事务

    }
}
#数据库设置

# 明确登入和登出成功后分别的默认landing page是哪个
LOGIN_REDIRECT_URL = '/reports/analysis'
LOGOUT_REDIRECT_URL = '/accounts/login'

# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]
# 可扩展的密码验证器，用于提示某些用户输入了糟糕的密码

# Internationalization
# https://docs.djangoproject.com/en/4.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = False #是否使用时区，改成false 使用系统当前时间


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.0/howto/static-files/

STATIC_URL = '/static/' #静态资源存放目录
STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static'), #引入os包进行路径配置
]
STATIC_ROOT ='static_root'

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# 打印日志
LOGGING = {
    'disable_existing_loggers':False,
    'version':1,
    'handlers':{
        'console':{
        # logging hadler that outputs log messages to terminal
        'class':'logging.StreamHandler',
        'level':'DEBUG', #message level to be writtern to console
        },
    },
    'loggers':{
        '':{
            #this sets root level logger to log debug and higher level
            #logs to console, all loggers inherit settings from
            #root level logger.
            'handlers':['console'],
            'level':'DEBUG',
            'propagate':False,
        },
        'django.db':{
            'handlers':['console'],
            'level':'DEBUG',
            'propagate':False,
        },
    },
}